services:
  # Eureka-server
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - msa-network

  # Gateway
  gateway:
    image: gateway:latest
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://admin:1234@eureka-server:8761/eureka
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    networks:
      - msa-network

  # User Service
  user-service:
    image: user-service:latest  # user-service 이미지 이름
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      - database
      - eureka-server
    ports:
      - "9001:9001"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://admin:1234@eureka-server:8761/eureka
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    networks:
      - msa-network

  # Order Service
  order-service:
    image: order-service:latest  # order-service 이미지 이름
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    depends_on:
      - database
      - eureka-server
    ports:
      - "9003:9003"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://admin:1234@eureka-server:8761/eureka
    networks:
      - msa-network

  # Ticket Service
  ticket-service:
    image: ticket-service:latest  # ticket-service 이미지 이름
    container_name: ticket-service
    build:
      context: ./ticket-service
      dockerfile: Dockerfile
    depends_on:
      - database
      - eureka-server
    ports:
      - "9002:9002"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://admin:1234@eureka-server:8761/eureka
    networks:
      - msa-network

  database:
    container_name: db
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: 'Asia/Seoul'
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    networks:
      - msa-network
    deploy:
      resources:
        limits:
          cpus: '0.50'   # CPU 50%
          memory: 512M    # 메모리 512MB

  # Redis
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${SPRING_REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${SPRING_REDIS_PASSWORD}"   ]  # Redis 비밀번호 설정
    networks:
      - msa-network
    deploy:
      resources:
        limits:
          cpus: '0.25'   # CPU 25%
          memory: 256M    # 메모리 256MB

volumes:
  mysql-data:

networks:
  msa-network:
    driver: bridge